name: "Terraform Plan and Apply"

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - terraform

pool:
  vmImage: "windows-latest"

variables:
  - group: "....."

stages:
- stage: Plan
  displayName: "Plan - TF deployment"
  jobs:
  - job: Terraform
    displayName: 'Terraform'
    steps:
      - task: TerraformInstaller@1
        displayName: "Terraform Install Latest"
        inputs:
          terraformVersion: "latest"

      - task: CmdLine@2
        displayName: "Terraform Init"
        inputs:
          script: 'terraform init -upgrade -backend-config="access_key=$(...)"'
          workingDirectory: "terraform"

      - task: CmdLine@2
        displayName: "Terraform Validate"
        inputs:
          script: "terraform validate"
          workingDirectory: "terraform"

      - task: CmdLine@2
        displayName: "Terraform Plan"
        inputs:
          script: 'terraform plan -input=false -out=$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-tfplan -var="spn_client_id=$(...)" -var="spn_client_secret=$(...)" -var="spn_tenant_id=$(...)"'
          workingDirectory: "terraform"

      - task: PublishPipelineArtifact@1
        displayName: "Publish Terraform Plan"
        inputs:
          targetPath: "$(Build.ArtifactStagingDirectory)"
          artifact: "$(Build.BuildId)-tfplan"

- stage: Apply
  displayName: "Apply - TF deployment"
  dependsOn: Plan
  condition: succeeded()
  jobs:
  - job: TerraformApply
    displayName: 'Terraform Apply'
    steps:
      - task: DownloadPipelineArtifact@2
        displayName: "Download Terraform Plan Artifact"
        inputs:
          artifactName: "$(Build.BuildId)-tfplan"
          path: "$(Build.ArtifactStagingDirectory)"

      - task: TerraformInstaller@1
        displayName: "Terraform Install Latest"
        inputs:
          terraformVersion: "latest"

      - task: CmdLine@2
        displayName: "Terraform Init"
        inputs:
          script: 'terraform init -upgrade -backend-config="access_key=$(....)"'
          workingDirectory: "terraform"

      - task: CmdLine@2
        displayName: "Terraform Apply"
        inputs:
          script: 'terraform apply -auto-approve -input=false $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-tfplan'
          workingDirectory: "terraform"
